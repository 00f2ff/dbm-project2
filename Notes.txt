Scope:
 - Most populous city in each state
 - xxx restaurants per city of a particular category / search term

Metrics:
 - Take 'rating' and 'review_count' from each business

Search Specifications:
 - Change sort to "Highest Rated" and update offset

Computation:
 - Multiply rating by review_count for each state to find weight
  o Add weight to one list, and review_count to a total_review_count variable
  o Divide weight by total_review_count and store for each state in dict format


Things to keep in mind:
 - The rating Yelp returns for each restaurant is rounded somehow
 - Yelp uses an algorithm to decide which restaurants are the highest-rated which is dependent on both rating and review_count

Starting categories
Chinese: 'chinese'
Pizza: 'pizza'
Mexican: 'mexican'
Bars: 'bars'
https://www.yelp.com/developers/documentation/v2/all_category_list 



Passing to appspot data structure:
Except this is a value of key "Pizza" or any category used.
For saving purposes: file saved as "Pizza.json"
{
	"DC": {
		"city": "Washington",
		"population": 700000,
		"rating": 3.8,
		"reviews": 8000
	},...
}

File save data structure:
{
	"DC": {
		"city": "Washington",
		"restaurants": [ ... ]
	},...
}

Make this look nice later

Team feedback:
 - Add state names to each state --> going to be too time-intensive (and may screw up SVG)


1. Follow http://bl.ocks.org/tgk/6044254 to make tooltip for treemap
2. Figure out how to calculate percentage in treemap and add to tooltip
3. Figure out how to integrate same kind of tooltip with map (move info off of right)
4. On success of (3), change radio button nav to flexbox up top; reorganize where best and worst are
5. Add other 3 datasets to flexbox nav
6. Add project description and other statistical analysis explanations. It should read like a news article. 